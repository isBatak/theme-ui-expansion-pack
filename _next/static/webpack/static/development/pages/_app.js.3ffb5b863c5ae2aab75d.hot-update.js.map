{"version":3,"file":"static/webpack/static/development/pages/_app.js.3ffb5b863c5ae2aab75d.hot-update.js","sources":["webpack:////Users/ivicabatinic/Documents/projects/DEV_PLAYGROUND/theme-ui-expansion-pack/node_modules/prism-react-renderer/themes/github/index.js","webpack:///./src/components/CodeBlock.tsx"],"sourcesContent":["// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\n\nexport default theme;\n","import React, { useState } from 'react';\nimport lightTheme from 'prism-react-renderer/themes/github';\nimport darkTheme from 'prism-react-renderer/themes/nightOwl';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport { mdx } from '@mdx-js/react';\nimport * as ThemeUi from 'theme-ui';\nimport * as ThemeUiExpansionPack from 'theme-ui-expansion-pack';\nimport * as ReactIcons from 'react-icons/md';\nimport Lorem from 'react-lorem-component';\n\nconst { Button, ...restThemeUi } = ThemeUi;\nconst { Box } = restThemeUi;\n\nexport const liveEditorStyle = {\n  fontSize: '14',\n  marginBottom: '32',\n  marginTop: '32',\n  overflowX: 'auto',\n  fontFamily: 'Menlo,monospace',\n  borderRadius: '10',\n};\n\nexport const liveErrorStyle = {\n  fontFamily: 'Menlo, monospace',\n  fontSize: 14,\n  padding: '1em',\n  overflowX: 'auto',\n  color: 'white',\n  backgroundColor: 'red',\n};\n\nconst images = {\n  nyc:\n    'https://images.unsplash.com/photo-1446776899648-aa78eefe8ed0?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9',\n  flatiron:\n    'https://images.unsplash.com/photo-1520222984843-df35ebc0f24d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9',\n  logo: 'https://contrast.now.sh/fff/000?text=UI&size=96&fontSize=1.5&baseline=1',\n};\n\nconst LiveCodePreview = (props) => <Box as={LivePreview} sx={{ fontFamily: 'body', mb: 3 }} {...props} />;\n\nconst CopyButton = (props) => (\n  <Button\n    size=\"sm\"\n    position=\"absolute\"\n    textTransform=\"uppercase\"\n    variantColor=\"teal\"\n    fontSize=\"xs\"\n    height=\"24px\"\n    top={0}\n    zIndex=\"1\"\n    right=\"1.25em\"\n    {...props}\n  />\n);\n\nconst StarIcon = (props) => {\n  return (\n    <Box m=\"2px\" as=\"svg\" fill=\"current\" size=\"3\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M23.555 8.729a1.505 1.505 0 0 0-1.406-.98h-6.087a.5.5 0 0 1-.472-.334l-2.185-6.193a1.5 1.5 0 0 0-2.81 0l-.005.016-2.18 6.177a.5.5 0 0 1-.471.334H1.85A1.5 1.5 0 0 0 .887 10.4l5.184 4.3a.5.5 0 0 1 .155.543l-2.178 6.531a1.5 1.5 0 0 0 2.31 1.684l5.346-3.92a.5.5 0 0 1 .591 0l5.344 3.919a1.5 1.5 0 0 0 2.312-1.683l-2.178-6.535a.5.5 0 0 1 .155-.543l5.194-4.306a1.5 1.5 0 0 0 .433-1.661z\"></path>\n    </Box>\n  );\n};\n\nexport const CodeBlock = ({ className, live, isManual, render, children, ...props }) => {\n  const [editorCode, setEditorCode] = useState(children.trim());\n\n  const language = className && className.replace(/language-/, '');\n  // const { onCopy, hasCopied } = useClipboard(editorCode);\n\n  const themes = { light: lightTheme, dark: darkTheme };\n  const theme = themes['light'];\n\n  const liveProviderProps = {\n    theme,\n    language,\n    code: editorCode,\n    transformCode: (code) => `/** @jsx jsx */\\n<>${code}</>`,\n    scope: { ...ThemeUi, ...ThemeUiExpansionPack, ...ReactIcons, Lorem, mdx, StarIcon, images },\n    noInline: isManual,\n    ...props,\n  };\n\n  const handleCodeChange = (newCode) => setEditorCode(newCode.trim());\n\n  if (language.startsWith('js') && Boolean(live)) {\n    return (\n      <LiveProvider {...liveProviderProps}>\n        <LiveCodePreview />\n        <Box sx={{ position: 'relative' }}>\n          <LiveEditor\n            onChange={handleCodeChange}\n            p={20}\n            // @ts-ignore\n            sx={liveEditorStyle}\n          />\n          {/* <CopyButton onClick={onCopy}>{hasCopied ? 'copied' : 'copy'}</CopyButton> */}\n        </Box>\n        <Box\n          as={LiveError}\n          // @ts-ignore\n          sx={liveErrorStyle}\n        />\n      </LiveProvider>\n    );\n  }\n\n  if (render) {\n    return (\n      <div sx={{ marginTop: '40px' }}>\n        <LiveProvider {...liveProviderProps}>\n          <LiveCodePreview />\n        </LiveProvider>\n      </div>\n    );\n  }\n\n  return (\n    <LiveProvider disabled {...liveProviderProps}>\n      <Box\n        as={LiveEditor}\n        p={20}\n        // @ts-ignore\n        sx={liveEditorStyle}\n      />\n    </LiveProvider>\n  );\n};\n\nCodeBlock.defaultProps = {\n  mountStylesheet: false,\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AAEA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AADA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AADA;;;;A","sourceRoot":""}