{"version":3,"file":"static/webpack/static/development/pages/_app.js.a0b033f950d50e64624f.hot-update.js","sources":["webpack:///./src/components/SidebarNavLink.tsx"],"sourcesContent":["/** @jsx jsx */\n/* eslint jsx-a11y/anchor-has-content: 0 */\nimport { FC } from 'react';\nimport { jsx } from 'theme-ui';\nimport isAbsoluteURL from 'is-absolute-url';\nimport NextLink, { LinkProps } from 'next/link';\nimport isString from 'lodash/isString';\nimport { NavLink } from 'theme-ui';\nimport { useRouter } from 'next/router';\n\nconst ActiveNavLink: FC<{ href?: string }> = ({ href, children, ...rest }) => {\n  const router = useRouter();\n\n  console.log(href, router.asPath);\n\n  return router.asPath.startsWith(href) ? (\n    <div sx={{ p: 2 }}>{children}</div>\n  ) : (\n    <NavLink href={href} {...rest}>\n      {children}\n    </NavLink>\n  );\n};\n\nexport const SidebarNavLink: FC<LinkProps & { className: string }> = ({ href, children, className, ...props }) => {\n  const isExternal = isString(href) && isAbsoluteURL(href || '');\n\n  if (isExternal && isString(href)) {\n    return (\n      <NavLink href={href} className={className}>\n        {children}\n      </NavLink>\n    );\n  }\n\n  return (\n    <NextLink href={href} as={`${process.env.linkPrefix}${href}`} {...props} passHref>\n      <ActiveNavLink>{children}</ActiveNavLink>\n    </NextLink>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}